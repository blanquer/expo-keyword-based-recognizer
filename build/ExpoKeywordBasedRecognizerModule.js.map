{"version":3,"file":"ExpoKeywordBasedRecognizerModule.js","sourceRoot":"","sources":["../src/ExpoKeywordBasedRecognizerModule.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,mBAAmB,EAAE,MAAM,MAAM,CAAC;AAmCzD,yDAAyD;AACzD,eAAe,mBAAmB,CAAmC,4BAA4B,CAAC,CAAC","sourcesContent":["import { NativeModule, requireNativeModule } from 'expo';\n\nimport { ExpoKeywordBasedRecognizerModuleEvents, KeywordRecognizerOptions, Language, PermissionResponse } from './ExpoKeywordBasedRecognizer.types';\n\ndeclare class ExpoKeywordBasedRecognizerModule extends NativeModule<ExpoKeywordBasedRecognizerModuleEvents> {\n  // hello(): string;\n  // setValueAsync(value: string): Promise<void>;\n\n  // Main methods\n  activate(options: KeywordRecognizerOptions): Promise<void>;\n  deactivate(): Promise<void>;\n\n  // Permission methods\n  requestPermissionsAsync(): Promise<PermissionResponse>;\n  // getPermissionsAsync(): Promise<PermissionResponse>;\n\n  // Language methods\n  getAvailableLanguages(): Promise<Language[]>;\n  \n  // Sound playback methods\n  playKeywordSound(): Promise<void>;\n  playSentenceSound(): Promise<void>;\n\n  // // Event listeners\n  // addListener<T extends keyof KeywordBasedRecognizerNativeEventMap>(\n  //   eventName: T,\n  //   listener: (event: KeywordBasedRecognizerNativeEventMap[T]) => void\n  // ): void;\n\n  // removeListeners(count: number): void;\n  // removeAllListeners(): void;\n}\n\n\n\n// This call loads the native module object from the JSI.\nexport default requireNativeModule<ExpoKeywordBasedRecognizerModule>('ExpoKeywordBasedRecognizer');\n"]}