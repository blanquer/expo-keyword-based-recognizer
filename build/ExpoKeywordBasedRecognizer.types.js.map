{"version":3,"file":"ExpoKeywordBasedRecognizer.types.js","sourceRoot":"","sources":["../src/ExpoKeywordBasedRecognizer.types.ts"],"names":[],"mappings":"AAsBA,wBAAwB;AAExB,MAAM,CAAN,IAAY,0BAKX;AALD,WAAY,0BAA0B;IACpC,2CAAa,CAAA;IACb,6EAA+C,CAAA;IAC/C,uEAAyC,CAAA;IACzC,uDAAyB,CAAA;AAC3B,CAAC,EALW,0BAA0B,KAA1B,0BAA0B,QAKrC;AA4CD,0DAA0D;AAC1D,4CAA4C;AAC5C,4BAA4B;AAC5B,0CAA0C;AAC1C,4CAA4C;AAC5C,kBAAkB;AAClB,oDAAoD;AACpD,IAAI","sourcesContent":["\n\nexport type OnLoadEventPayload = {\n  url: string;\n};\n\n\n\nexport type ExpoKeywordBasedRecognizerModuleEvents = {\n  onChange: (params: ChangeEventPayload) => void;\n  onStateChange: (state: KeywordRecognizerState) => void;\n  onKeywordDetected: (event: KeywordDetectionEvent) => void;\n  onRecognitionStart: (data?: any) => void; // Allow flowId to be passed\n  onRecognitionResult: (result: RecognitionResult) => void;\n  onError: (error: Error) => void;\n};\n\nexport type ChangeEventPayload = {\n  value: string;\n};\n\n\n////////////////////////\n\nexport enum KeywordRecognizerStateEnum {\n  IDLE = \"idle\",\n  LISTENING_FOR_KEYWORD = \"listening_for_keyword\",\n  RECOGNIZING_SPEECH = \"recognizing_speech\",\n  PROCESSING = \"processing\",\n}\nexport interface KeywordRecognizerState {\n  state: KeywordRecognizerStateEnum\n}\nexport interface KeywordRecognizerOptions {\n  keyword: string | null;\n  language?: string;\n  maxSilenceDuration?: number;\n  soundEnabled?: boolean;\n  interimResults?: boolean;\n  contextualHints?: string[];\n  initializeAudioSession?: boolean;\n}\n\nexport interface RecognitionResult {\n  text: string;\n  isFinal: boolean;\n}\n\nexport interface SpeechSegment {\n  segment: string;\n  startTime: number;\n  endTime: number;\n  confidence: number;\n}\n\nexport interface KeywordDetectionEvent {\n  keyword: string;\n  // timestamp: number;\n}\n\nexport type PermissionStatus = \"undetermined\" | \"denied\" | \"granted\";\n\nexport interface PermissionResponse {\n  status: PermissionStatus;\n  canAskAgain: boolean;\n  granted: boolean;\n}\n\nexport interface Language {\n  code: string;\n  name: string;\n}\n\n// export interface KeywordBasedRecognizerNativeEventMap {\n//   keywordDetected: KeywordDetectionEvent;\n//   recognitionStart: null;\n//   recognitionResult: RecognitionResult;\n//   recognitionComplete: RecognitionResult;\n//   error: Error;\n//   stateChange: { state: KeywordRecognizerState };\n// }"]}